# Enable vi mode
bindkey -v

# Vi mode cursor styling
function zle-keymap-select {
    if [[ ${KEYMAP} == vicmd ]] || [[ $1 = 'block' ]]; then
        echo -ne '\e[1 q'  # Block cursor for normal mode
    elif [[ ${KEYMAP} == main ]] || [[ ${KEYMAP} == viins ]] || [[ ${KEYMAP} = '' ]] || [[ $1 = 'beam' ]]; then
        echo -ne '\e[5 q'  # Beam cursor for insert mode
    fi
}
zle -N zle-keymap-select

# Start with beam cursor
echo -ne '\e[5 q'

# Better vi mode bindings (preserve useful emacs-style shortcuts)
# Note: Ctrl-R is handled by fzf plugin for fuzzy history search
bindkey '^A' beginning-of-line                    # Keep Ctrl-A
bindkey '^E' end-of-line                          # Keep Ctrl-E
bindkey '^K' kill-line                            # Keep Ctrl-K
bindkey '^U' backward-kill-line                   # Keep Ctrl-U
bindkey '^W' backward-kill-word                   # Keep Ctrl-W
bindkey '^Y' yank                                 # Keep Ctrl-Y

# Edit command line in vim
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey -M vicmd 'v' edit-command-line

# Load nvm
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm

#source /usr/share/nvm/init-nvm.sh

[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Load pyenv
#[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
#eval "$(pyenv init - zsh)"

# Load zoxide
eval "$(zoxide init zsh)"

# Load fzf (fuzzy finder)
eval "$(fzf --zsh)"
